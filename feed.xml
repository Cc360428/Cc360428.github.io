

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://cc360428.github.io//</id>
  <title>Cc Blog</title>
  <subtitle># A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-05-10T15:41:33+08:00</updated>
  <author>
    <name>Cc</name>
    <uri>https://cc360428.github.io//</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://cc360428.github.io//feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://cc360428.github.io//"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2025 Cc </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>docker-compose Install Yaml</title>
    <link href="https://cc360428.github.io//posts/docker-compose-install-all/" rel="alternate" type="text/html" title="docker-compose Install Yaml" />
    <published>2024-05-21T12:48:54+08:00</published>
  
    <updated>2024-05-21T12:48:54+08:00</updated>
  
    <id>https://cc360428.github.io//posts/docker-compose-install-all/</id>
    <content src="https://cc360428.github.io//posts/docker-compose-install-all/" />
    <author>
      <name>Cc</name>
    </author>

  
    
    <category term="DevOps" />
    
    <category term="Docker" />
    
  

  
    <summary>
      





      consul

version: "3"

services:
  consul-server1:
    image: hashicorp/consul:latest
    container_name: consul-server1
    restart: always
    volumes:
      - ${PWD}/config/server1.json:/consul/config/server1.json:ro
      - ${PWD}/config/certs/:/consul/config/certs/:ro
    networks:
      - consul
    ports:
      - "9999:8500"
      - "10001:8600/tcp"
      - "10002:8600/udp"
    command: "...
    </summary>
  

  </entry>

  
  <entry>
    <title>CDN</title>
    <link href="https://cc360428.github.io//posts/CDN/" rel="alternate" type="text/html" title="CDN" />
    <published>2024-04-28T12:48:54+08:00</published>
  
    <updated>2024-04-28T12:48:54+08:00</updated>
  
    <id>https://cc360428.github.io//posts/CDN/</id>
    <content src="https://cc360428.github.io//posts/CDN/" />
    <author>
      <name>Cc</name>
    </author>

  
    
    <category term="DevOps" />
    
    <category term="Network" />
    
  

  
    <summary>
      





      CDN


  CDN 是内容分发网络（Content Delivery Network）的缩写。它是一个由分布在全球各地的服务器网络组成的系统，用于在用户请求内容时快速交付网站、应用程序、音频、视频和其他互联网内容


工作原理


  网络架构：CDN 由多个位于全球各地的服务器节点组成，这些节点通常称为边缘服务器。这些服务器节点分布在地理位置上的关键位置，以便尽可能地靠近最终用户。
  工作原理：当用户请求访问一个网站或者特定的内容时，CDN 系统会自动选择最接近用户的服务器节点来提供内容。这样做可以减少数据传输的距离，从而降低延迟和提高加载速度。
  内容缓存：CDN 会将网站的静态内容（如图像、样式表、脚本等）缓存到其服务器节点上。当有用户请求相同内容时，CDN 会直接从缓存中提供，而不是从原始服务器获取，这样可以减轻原始服务器的负载。
  负载均衡：CDN 能够智能地分配...
    </summary>
  

  </entry>

  
  <entry>
    <title>Kubernetes Work CMD</title>
    <link href="https://cc360428.github.io//posts/k8s-work-cmd/" rel="alternate" type="text/html" title="Kubernetes Work CMD" />
    <published>2024-03-16T12:23:54+08:00</published>
  
    <updated>2024-05-19T19:22:34+08:00</updated>
  
    <id>https://cc360428.github.io//posts/k8s-work-cmd/</id>
    <content src="https://cc360428.github.io//posts/k8s-work-cmd/" />
    <author>
      <name>Cc</name>
    </author>

  
    
    <category term="DevOps" />
    
    <category term="Kubernetes" />
    
  

  
    <summary>
      





      Work CMD


  work cmd


generate

#!/bin/bash
KUBECONFIG=ind_dev:ind_dev_local:vn_dev:vn_dev_local kubectl config view --flatten &amp;gt;./config
KUBECONFIG=ind_dev:ind_dev_local:vn_dev:vn_dev_local kubectl config view --flatten &amp;gt;~/.kube/config


cmd

#!/bin/bash

kubectl config get-contexts        # 列出所有上下文
kubectl config use-context ind_dev # 切换上下文
kubectl config view                # 验证配置
#  ...
    </summary>
  

  </entry>

  
  <entry>
    <title>MySQL Select Leetcode</title>
    <link href="https://cc360428.github.io//posts/mysql-select/" rel="alternate" type="text/html" title="MySQL Select Leetcode" />
    <published>2024-01-09T23:21:48+08:00</published>
  
    <updated>2024-01-09T23:21:48+08:00</updated>
  
    <id>https://cc360428.github.io//posts/mysql-select/</id>
    <content src="https://cc360428.github.io//posts/mysql-select/" />
    <author>
      <name>Cc</name>
    </author>

  
    
    <category term="DataStorage" />
    
    <category term="Mysql" />
    
  

  
    <summary>
      





      查询

可回收且低脂的产品


  
    元数据

    Create table If Not Exists Products (product_id int, low_fats ENUM('Y', 'N'), recyclable ENUM('Y','N'));
Truncate table Products;
insert into Products (product_id, low_fats, recyclable) values ('0', 'Y', 'N');
insert into Products (product_id, low_fats, recyclable) values ('1', 'Y', 'Y');
insert into Products (product_id, low_fats, recyclable) values ('2', 'N', '...
    </summary>
  

  </entry>

  
  <entry>
    <title>MySQL Select Base</title>
    <link href="https://cc360428.github.io//posts/mysql-select-base/" rel="alternate" type="text/html" title="MySQL Select Base" />
    <published>2024-01-09T23:20:48+08:00</published>
  
    <updated>2024-01-09T23:20:48+08:00</updated>
  
    <id>https://cc360428.github.io//posts/mysql-select-base/</id>
    <content src="https://cc360428.github.io//posts/mysql-select-base/" />
    <author>
      <name>Cc</name>
    </author>

  
    
    <category term="DataStorage" />
    
    <category term="Mysql" />
    
  

  
    <summary>
      





      MySQL Select Base


  基本的 SQL 语法：了解 SQL 的基本语法结构，包括 SELECT、FROM、WHERE、GROUP BY、ORDER BY 等关键字的使用方法
  表的创建和管理：理解如何创建表，定义列的数据类型，以及如何管理表的结构，包括添加、删除、修改列等操作
  索引：了解索引的概念以及如何在表上创建索引，以提高查询性能
  聚合函数：掌握聚合函数如 COUNT、SUM、AVG、MIN、MAX 等的使用，以便对数据进行统计和计算
  GROUP BY 子句：学习如何使用 GROUP BY 子句对数据进行分组，并结合聚合函数进行分组统计
  HAVING 子句：了解 HAVING 子句的作用，它与 WHERE 子句的区别，以及在 GROUP BY 后进行条件过滤的用法
  连接（JOIN）：学习不同类型的连接操作，如 INNER JOIN、LEF...
    </summary>
  

  </entry>

</feed>


